Designation.box = ggplot(data=burn.out, aes(x=factor(Designation), y=Mental.Fatigue.Score)) +
geom_boxplot()
Designation.box
total.burn = ggplot(data = burn.out, aes(x=Mental.Fatigue.Score)) +
geom_bar()
total.burn
model2 = lm(Mental.Fatigue.Score ~ Company.Type + Gender +
WFH.Setup.Available + Designation + Resource.Allocation,
data=burn.out)
summary(model2)
gvlma(model2)
model.gender = lm(Mental.Fatigue.Score ~ Gender, data = burn.out)
model.company.type = lm(Mental.Fatigue.Score ~ Company.Type, data = burn.out)
model.wfh = lm(Mental.Fatigue.Score ~ WFH.Setup.Available, data = burn.out)
model.designation = lm(Mental.Fatigue.Score ~ Designation, data = burn.out)
model.resource = lm(Mental.Fatigue.Score ~ Resource.Allocation, data = burn.out)
models = c(model.gender, model.company.type, model.wfh, model.designation,
model.resource)
model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.out)
scope = list(lower = formula(model.empty), upper = formula(model2))
forwardAIC = step(model.empty, scope, direction = "forward", k = 2)
summary(forwardAIC)
model.burn.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation +Gender, data = burn.out)
summary(model.burn.reduced)
plot(model.burn.reduced)
data=burn.no.extremes)
summary(bne.model)
bne.model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.no.extremes)
bne.scope = list(lower = formula(bne.model.empty), upper = formula(bne.model))
forwardAIC.bne = step(bne.model.empty, bne.scope, direction = "forward", k = 1)
bne.model.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation + Gender, data= burn.no.extremes)
summary(bne.model.reduced)
burn.out2 = burn.out %>%
mutate(Mental.Fatigue.Score = Mental.Fatigue.Score + 1)
burn2.trans = boxcox(burn.out2$Mental.Fatigue.Score ~ burn.out2$Company.Type +
burn.out2$Gender +
burn.out2$WFH.Setup.Available +
burn.out2$Designation +
burn.out2$Resource.Allocation)
lambda = burn2.trans$x[which.max(burn2.trans$y)]
burn.out2 = burn.out2 %>%
mutate(Mental.Fatigue.Score = (Mental.Fatigue.Score^lambda-1)/lambda)
model.burn2.bc = lm(Mental.Fatigue.Score ~ Company.Type +
Gender +
WFH.Setup.Available +
Designation +
Resource.Allocation, data=burn.out2)
summary(model.burn2.bc)
burn2.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.out2)
burn2.scope = list(lower = formula(burn2.empty), upper = formula(model.burn2.bc))
forwardAIC.burn2 = step(burn2.empty, burn2.scope, direction = "forward", k = 2)
burn2.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation + Gender, data=burn.out2)
summary(burn2.reduced)
gvlma(burn2.reduced)
low.tenure = burn.out %>%
filter(Designation >= 2)
burn.out.num = burn.out
View(burn.out2)
burn.out = burn.out %>%
mutate(Gender=relevel(Gender,ref = 'Male')) %>%
mutate(Designation = factor(Designation)) %>%
mutate(Resource.Allocation = factor(Resource.Allocation))
burn.out = burn.out %>%
mutate(Gender=relevel(Gender,ref = 'Male')) %>%
mutate(Designation = factor(Designation)) %>%
mutate(Resource.Allocation = factor(Resource.Allocation))
WFH.box = ggplot(data=burn.out, aes(x=WFH.Setup.Available, y=Mental.Fatigue.Score)) +
geom_boxplot() + xlab('Ability to Work From Home') +
ylab('Mental Fatigue Score')
Designation.box = ggplot(data=burn.out, aes(x=factor(Designation), y=Mental.Fatigue.Score)) +
geom_boxplot()
Designation.box
total.burn = ggplot(data = burn.out, aes(x=Mental.Fatigue.Score)) +
geom_bar()
total.burn
model2 = lm(Mental.Fatigue.Score ~ Company.Type + Gender +
WFH.Setup.Available + Designation + Resource.Allocation,
data=burn.out)
summary(model2)
gvlma(model2)
model.gender = lm(Mental.Fatigue.Score ~ Gender, data = burn.out)
model.company.type = lm(Mental.Fatigue.Score ~ Company.Type, data = burn.out)
model.wfh = lm(Mental.Fatigue.Score ~ WFH.Setup.Available, data = burn.out)
model.designation = lm(Mental.Fatigue.Score ~ Designation, data = burn.out)
model.resource = lm(Mental.Fatigue.Score ~ Resource.Allocation, data = burn.out)
models = c(model.gender, model.company.type, model.wfh, model.designation,
model.resource)
model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.out)
scope = list(lower = formula(model.empty), upper = formula(model2))
forwardAIC = step(model.empty, scope, direction = "forward", k = 2)
summary(forwardAIC)
model.burn.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation +Gender, data = burn.out)
summary(model.burn.reduced)
plot(model.burn.reduced)
data=burn.no.extremes)
summary(bne.model)
bne.model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.no.extremes)
bne.scope = list(lower = formula(bne.model.empty), upper = formula(bne.model))
forwardAIC.bne = step(bne.model.empty, bne.scope, direction = "forward", k = 1)
bne.model.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation + Gender, data= burn.no.extremes)
summary(bne.model.reduced)
burn.out2 = burn.out %>%
mutate(Mental.Fatigue.Score = Mental.Fatigue.Score + 1)
burn2.trans = boxcox(burn.out2$Mental.Fatigue.Score ~ burn.out2$Company.Type +
burn.out2$Gender +
burn.out2$WFH.Setup.Available +
burn.out2$Designation +
burn.out2$Resource.Allocation)
lambda = burn2.trans$x[which.max(burn2.trans$y)]
burn.out2 = burn.out2 %>%
mutate(Mental.Fatigue.Score = (Mental.Fatigue.Score^lambda-1)/lambda)
model.burn2.bc = lm(Mental.Fatigue.Score ~ Company.Type +
Gender +
WFH.Setup.Available +
Designation +
Resource.Allocation, data=burn.out2)
summary(model.burn2.bc)
burn2.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.out2)
burn2.scope = list(lower = formula(burn2.empty), upper = formula(model.burn2.bc))
forwardAIC.burn2 = step(burn2.empty, burn2.scope, direction = "forward", k = 2)
burn2.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation + Gender, data=burn.out2)
summary(burn2.reduced)
gvlma(burn2.reduced)
low.tenure = burn.out %>%
filter(Designation >= 2)
low.tenure = burn.out %>%
filter(droplevels(Designation >= 2))
low.tenure = burn.out %>%
mutate(Designation = droplevels(Designation))
low.tenure = burn.out %>%
droplevels(Designation))
low.tenure = burn.out %>%
droplevels(Designation)
low.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation)))
low.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation >= 2)
low.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation <= 2)
low.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation <= 2)
high.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation > 2)
low.tenure.model = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Gender, data=low.tenure)
summary(low.tenure.model)
high.tenure.model = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Gender, data=high.tenure)
summary(high.tenure.model)
burn.out = read.csv('test.csv')
burn.out = data.frame(burn.out)
summary(burn.out)
burn.out = burn.out %>%
mutate(Gender=relevel(Gender,ref = 'Male')) %>%
mutate(Designation = factor(Designation)) %>%
mutate(Resource.Allocation = factor(Resource.Allocation))
WFH.box = ggplot(data=burn.out, aes(x=WFH.Setup.Available, y=Mental.Fatigue.Score)) +
geom_boxplot() + xlab('Ability to Work From Home') +
ylab('Mental Fatigue Score')
Designation.box = ggplot(data=burn.out, aes(x=factor(Designation), y=Mental.Fatigue.Score)) +
geom_boxplot()
Designation.box
total.burn = ggplot(data = burn.out, aes(x=Mental.Fatigue.Score)) +
geom_bar()
total.burn
model2 = lm(Mental.Fatigue.Score ~ Company.Type + Gender +
WFH.Setup.Available + Designation + Resource.Allocation,
data=burn.out)
summary(model2)
gvlma(model2)
model.gender = lm(Mental.Fatigue.Score ~ Gender, data = burn.out)
model.company.type = lm(Mental.Fatigue.Score ~ Company.Type, data = burn.out)
model.wfh = lm(Mental.Fatigue.Score ~ WFH.Setup.Available, data = burn.out)
model.designation = lm(Mental.Fatigue.Score ~ Designation, data = burn.out)
model.resource = lm(Mental.Fatigue.Score ~ Resource.Allocation, data = burn.out)
models = c(model.gender, model.company.type, model.wfh, model.designation,
model.resource)
model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.out)
scope = list(lower = formula(model.empty), upper = formula(model2))
forwardAIC = step(model.empty, scope, direction = "forward", k = 2)
summary(forwardAIC)
model.burn.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation +Gender, data = burn.out)
summary(model.burn.reduced)
plot(model.burn.reduced)
data=burn.no.extremes)
summary(bne.model)
bne.model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.no.extremes)
bne.scope = list(lower = formula(bne.model.empty), upper = formula(bne.model))
forwardAIC.bne = step(bne.model.empty, bne.scope, direction = "forward", k = 1)
bne.model.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation + Gender, data= burn.no.extremes)
summary(bne.model.reduced)
burn.out2 = burn.out %>%
mutate(Mental.Fatigue.Score = Mental.Fatigue.Score + 1)
burn2.trans = boxcox(burn.out2$Mental.Fatigue.Score ~ burn.out2$Company.Type +
burn.out2$Gender +
burn.out2$WFH.Setup.Available +
burn.out2$Designation +
burn.out2$Resource.Allocation)
lambda = burn2.trans$x[which.max(burn2.trans$y)]
burn.out2 = burn.out2 %>%
mutate(Mental.Fatigue.Score = (Mental.Fatigue.Score^lambda-1)/lambda)
model.burn2.bc = lm(Mental.Fatigue.Score ~ Company.Type +
Gender +
WFH.Setup.Available +
Designation +
Resource.Allocation, data=burn.out2)
summary(model.burn2.bc)
burn2.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.out2)
burn2.scope = list(lower = formula(burn2.empty), upper = formula(model.burn2.bc))
forwardAIC.burn2 = step(burn2.empty, burn2.scope, direction = "forward", k = 2)
burn2.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation + Gender, data=burn.out2)
summary(burn2.reduced)
gvlma(burn2.reduced)
low.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation <= 2)
high.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation > 2)
low.tenure.model = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Gender, data=low.tenure)
summary(low.tenure.model)
high.tenure.model = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Gender, data=high.tenure)
summary(high.tenure.model)
plot(model2)
plot(model2$x, model2$y)
#Missed the mark .. RIP
avPlots(model2)
install.packages('car')
install.packages('curl')
install.packages("pkgconfig", dependencies = TRUE)
install.packages("pkgconfig", dependencies = TRUE)
install.packages("pkgconfig", dependencies = TRUE)
install.packages("pkgconfig", dependencies = TRUE)
install.packages('car')
install.packages('car')
library(car)
#Missed the mark .. RIP
avPlots(model2)
burn.out = read.csv('test.csv')
burn.out = data.frame(burn.out)
summary(burn.out)
burn.out = burn.out %>%
mutate(Gender=relevel(Gender,ref = 'Male')) %>%
mutate(Designation = factor(Designation))
WFH.box = ggplot(data=burn.out, aes(x=WFH.Setup.Available, y=Mental.Fatigue.Score)) +
geom_boxplot() + xlab('Ability to Work From Home') +
ylab('Mental Fatigue Score')
Designation.box = ggplot(data=burn.out, aes(x=factor(Designation), y=Mental.Fatigue.Score)) +
geom_boxplot()
Designation.box
total.burn = ggplot(data = burn.out, aes(x=Mental.Fatigue.Score)) +
geom_bar()
total.burn
model2 = lm(Mental.Fatigue.Score ~ Company.Type + Gender +
WFH.Setup.Available + Designation + Resource.Allocation,
data=burn.out)
summary(model2)
gvlma(model2)
model.gender = lm(Mental.Fatigue.Score ~ Gender, data = burn.out)
model.company.type = lm(Mental.Fatigue.Score ~ Company.Type, data = burn.out)
model.wfh = lm(Mental.Fatigue.Score ~ WFH.Setup.Available, data = burn.out)
model.designation = lm(Mental.Fatigue.Score ~ Designation, data = burn.out)
model.resource = lm(Mental.Fatigue.Score ~ Resource.Allocation, data = burn.out)
models = c(model.gender, model.company.type, model.wfh, model.designation,
model.resource)
model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.out)
scope = list(lower = formula(model.empty), upper = formula(model2))
forwardAIC = step(model.empty, scope, direction = "forward", k = 2)
summary(forwardAIC)
model.burn.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation +Gender, data = burn.out)
summary(model.burn.reduced)
influencePlot(forwardAIC)
plot(model.burn.reduced)
data=burn.no.extremes)
source("~/BurnOut/Burn.R")
burn.out = burn.out %>%
mutate(Gender=relevel(Gender,ref = 'Male')) %>%
mutate(Designation = factor(Designation)) %>%
mutute(Resource.Allocation = fact(Resource.Allocation))
WFH.box = ggplot(data=burn.out, aes(x=WFH.Setup.Available, y=Mental.Fatigue.Score)) +
geom_boxplot() + xlab('Ability to Work From Home') +
ylab('Mental Fatigue Score')
Designation.box = ggplot(data=burn.out, aes(x=factor(Designation), y=Mental.Fatigue.Score)) +
geom_boxplot()
mutute(Resource.Allocation = fact(Resource.Allocation)
WFH.box = ggplot(data=burn.out, aes(x=WFH.Setup.Available, y=Mental.Fatigue.Score)) +
geom_boxplot() + xlab('Ability to Work From Home') +
ylab('Mental Fatigue Score')
mutute(Resource.Allocation = factor(Resource.Allocation)
WFH.box = ggplot(data=burn.out, aes(x=WFH.Setup.Available, y=Mental.Fatigue.Score)) +
geom_boxplot() + xlab('Ability to Work From Home') +
ylab('Mental Fatigue Score')
mutate(Resource.Allocation = factor(Resource.Allocation)
burn.out = burn.out %>%
burn.out = read.csv('test.csv')
burn.out = data.frame(burn.out)
summary(burn.out)
#Mutating the data for multiple linear regression analysis
burn.out = burn.out %>%
burn.out = burn.out %>%
mutate(Gender=relevel(Gender,ref = 'Male')) %>%
mutate(Designation = factor(Designation)) %>%
mutate(Resource.Allocation = factor(Resource.Allocation))
install.packages('tidyverse')
library(dplyr)
library(ggplot2)
library(MASS)
install.packages('gvlma')
library(gvlma)
install.packages("pkgconfig", dependencies = TRUE)
install.packages("pkgconfig", dependencies = TRUE)
install.packages('car')
library(car)
burn.out = read.csv('test.csv')
burn.out = data.frame(burn.out)
summary(burn.out)
burn.out = burn.out %>%
mutate(Gender=relevel(Gender,ref = 'Male')) %>%
mutate(Designation = factor(Designation)) %>%
mutate(Resource.Allocation = factor(Resource.Allocation))
WFH.box = ggplot(data=burn.out, aes(x=WFH.Setup.Available, y=Mental.Fatigue.Score)) +
geom_boxplot() + xlab('Ability to Work From Home') +
ylab('Mental Fatigue Score')
Designation.box = ggplot(data=burn.out, aes(x=factor(Designation), y=Mental.Fatigue.Score)) +
geom_boxplot()
Designation.box
total.burn = ggplot(data = burn.out, aes(x=Mental.Fatigue.Score)) +
geom_bar()
total.burn
model2 = lm(Mental.Fatigue.Score ~ Company.Type + Gender +
WFH.Setup.Available + Designation + Resource.Allocation,
data=burn.out)
summary(model2)
gvlma(model2)
model.gender = lm(Mental.Fatigue.Score ~ Gender, data = burn.out)
model.company.type = lm(Mental.Fatigue.Score ~ Company.Type, data = burn.out)
model.wfh = lm(Mental.Fatigue.Score ~ WFH.Setup.Available, data = burn.out)
model.designation = lm(Mental.Fatigue.Score ~ Designation, data = burn.out)
model.resource = lm(Mental.Fatigue.Score ~ Resource.Allocation, data = burn.out)
models = c(model.gender, model.company.type, model.wfh, model.designation,
model.resource)
model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.out)
scope = list(lower = formula(model.empty), upper = formula(model2))
forwardAIC = step(model.empty, scope, direction = "forward", k = 2)
summary(forwardAIC)
model.burn.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation +Gender, data = burn.out)
summary(model.burn.reduced)
influencePlot(forwardAIC)
plot(model.burn.reduced)
data=burn.no.extremes)
summary(bne.model)
bne.model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.no.extremes)
bne.scope = list(lower = formula(bne.model.empty), upper = formula(bne.model))
burn.no.extremes = burn.out %>%
filter(Mental.Fatigue.Score > 0 & Mental.Fatigue.Score <10)
bne.model = lm(Mental.Fatigue.Score ~ Company.Type + Gender +
WFH.Setup.Available + Designation + Resource.Allocation,
data=burn.no.extremes)
summary(bne.model)
bne.model.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.no.extremes)
bne.scope = list(lower = formula(bne.model.empty), upper = formula(bne.model))
forwardAIC.bne = step(bne.model.empty, bne.scope, direction = "forward", k = 1)
bne.model.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation + Gender, data= burn.no.extremes)
summary(bne.model.reduced)
burn.out2 = burn.out %>%
mutate(Mental.Fatigue.Score = Mental.Fatigue.Score + 1)
burn2.trans = boxcox(burn.out2$Mental.Fatigue.Score ~ burn.out2$Company.Type +
burn.out2$Gender +
burn.out2$WFH.Setup.Available +
burn.out2$Designation +
burn.out2$Resource.Allocation)
lambda = burn2.trans$x[which.max(burn2.trans$y)]
burn.out2 = burn.out2 %>%
mutate(Mental.Fatigue.Score = (Mental.Fatigue.Score^lambda-1)/lambda)
model.burn2.bc = lm(Mental.Fatigue.Score ~ Company.Type +
Gender +
WFH.Setup.Available +
Designation +
Resource.Allocation, data=burn.out2)
summary(model.burn2.bc)
burn2.empty = lm(Mental.Fatigue.Score ~ 1, data = burn.out2)
burn2.scope = list(lower = formula(burn2.empty), upper = formula(model.burn2.bc))
forwardAIC.burn2 = step(burn2.empty, burn2.scope, direction = "forward", k = 2)
burn2.reduced = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation + Gender, data=burn.out2)
summary(burn2.reduced)
gvlma(burn2.reduced)
low.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation <= 2)
high.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation > 2)
low.tenure.model = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Gender, data=low.tenure)
summary(low.tenure.model)
high.tenure.model = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Gender, data=high.tenure)
summary(high.tenure.model)
#Missed the mark .. RIP
avPlots(model2)
summary(model2)
summary(model.burn.reduced)
low.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation < 1)
low.tenure.model = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Gender, data=low.tenure)
summary(low.tenure.model)
low.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation < 2)
low.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation <= 2)
high.tenure = burn.out %>%
mutate(Designation = as.numeric(as.character(Designation))) %>%
filter(Designation > 2)
low.tenure.model = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Gender, data=low.tenure)
summary(low.tenure.model)
class(burn.out$Date.of.Joining)
burn.out = burn.out %>%
Date.Dif = as.Date(as.character(survey$date), format="%Y-%m-%d") -
as.Date('2021-10-27', format='%Y-%m-%d')
burn.out = burn.out %>%
mutate(Date.Dif = as.Date(as.character(survey$date), format="%Y-%m-%d") -
as.Date('2021-10-27', format='%Y-%m-%d'))
burn.out = burn.out %>%
mutate(Date.Dif = as.Date('2021-10-27', format='%Y-%m-%d') -as.Date(as.character(survey$date), format="%Y-%m-%d"))
burn.out3 = burn.out %>%
mutate(Date.of.Joining = as.Date(Date.of.Joining, '%Y-%m-%d'))
burn.out = burn.out %>%
mutate(Date.of.Joining = as.Date(Date.of.Joining, '%Y-%m-%d'))
burn.out = burn.out %>%
mutate(Date.of.Joining = as.Date(Date.of.Joining, '%Y-%m-%d')) %>%
mutate(Date.Diff = as.numeric(difftime(Sys.Date(),
Date.of.Joining,
units = c('days'))))
model.w.date = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation +Gender + Date.Diff , data = burn.out)
summary(model.w.date)
#Missed the mark .. RIP
#Can time help the model?
date = as.Date('2010-04-27', '%Y-%m-%d')
burn.out = burn.out %>%
mutate(Date.of.Joining = as.Date(Date.of.Joining, '%Y-%m-%d')) %>%
mutate(Date.Diff = as.numeric(difftime(date,
Date.of.Joining,
units = c('days'))))
model.w.date = lm(Mental.Fatigue.Score ~ Resource.Allocation + WFH.Setup.Available +
Designation +Gender + Date.Diff , data = burn.out)
summary(model.w.date)
WFH.box
WFH.box = ggplot(data=burn.out, aes(x=WFH.Setup.Available, y=Mental.Fatigue.Score)) +
geom_boxplot(aes(color=WFH.Setup.Available)) + xlab('Ability to Work From Home') +
ylab('Mental Fatigue Score')
WFH.box
Designation.box
Designation.box + xlab('Tenure Designation') + ylab('Mental Fatigue Score')
resource = ggplot(data = burn.out, aes(x=Resource.Allocation, y=Mental.Fatigue.Score)) +
geom_boxplot() + geom_dotplot(binaxis='y',
stackdir='center',
dotsize = .5,
fill="red")
resource = ggplot(data = burn.out, aes(x=Resource.Allocation, y=Mental.Fatigue.Score)) +
geom_boxplot() + geom_dotplot(binaxis='y',
stackdir='center',
dotsize = .5,
fill="red")
resource
resource = ggplot(data = burn.out, aes(x=Resource.Allocation, y=Mental.Fatigue.Score)) +
geom_boxplot()
resource
resource = ggplot(data = burn.out, aes(x=Resource.Allocation, y=Mental.Fatigue.Score)) +
geom_boxplot() + xlab('Resource Allocation') + ylab('Mental Fatigue Score')
resource
summart(model2)
summary(model2)
abline(model2)
abline(model2)
plot(model2)
plot(model2)
total.burn
total.burn = ggplot(data = burn.out, aes(x=Mental.Fatigue.Score)) +
geom_bar(aes(color='blue'))
total.burn
total.burn = ggplot(data = burn.out, aes(x=Mental.Fatigue.Score)) +
geom_bar()
total.burn
total.burn = ggplot(data = burn.out, aes(x=Mental.Fatigue.Score)) +
geom_bar(colour="#000099")
total.burn
total.burn + xlab('Mental Fatigue Score') + ylab('Count')
